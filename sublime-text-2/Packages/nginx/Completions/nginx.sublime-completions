{
  "scope": "source.nginx",

  "completions":
  [
    "ngx_http_core_module",
    { "trigger": "aio", "contents": "aio ${1:on | off | sendfile};" },
    { "trigger": "alias", "contents": "alias ${1:path};" },
    { "trigger": "chunked_transfer_encoding", "contents": "chunked_transfer_encoding ${1:on | off};" },
    { "trigger": "client_body_buffer_size", "contents": "client_body_buffer_size ${1:size};" },
    { "trigger": "client_body_in_file_only", "contents": "client_body_in_file_only ${1:on | clean | off};" },
    { "trigger": "client_body_in_single_buffer", "contents": "client_body_in_single_buffer ${1:on | off};" },
    { "trigger": "client_body_temp_path", "contents": "client_body_temp_path ${1:path [level1 [level2 [level3]]]};" },
    { "trigger": "client_body_timeout", "contents": "client_body_timeout ${1:time};" },
    { "trigger": "client_header_timeout", "contents": "client_header_timeout ${1:time};" },
    { "trigger": "client_max_body_size", "contents": "client_max_body_size ${1:size};" },
    { "trigger": "connection_pool_size", "contents": "connection_pool_size ${1:size};" },
    { "trigger": "default_type", "contents": "default_type ${1:mime-type};" },
    { "trigger": "directio", "contents": "directio ${1:size | off};" },
    { "trigger": "directio_alignment", "contents": "directio_alignment ${1:size};" },
    { "trigger": "disable_symlinks", "contents": "disable_symlinks ${1:off | on | if_not_owner [from=part]};" },
    { "trigger": "error_page", "contents": "error_page ${1:code ... [=[response]] uri};" },
    { "trigger": "etag", "contents": "etag ${1:on | off};" },
    { "trigger": "if_modified_since", "contents": "if_modified_since ${1:off | exact | before};" },
    { "trigger": "ignore_invalid_headers", "contents": "ignore_invalid_headers ${1:on | off};" },
    { "trigger": "internal", "contents": "internal;" },
    { "trigger": "keepalive_disable", "contents": "keepalive_disable ${1:none | browser ...};" },
    { "trigger": "keepalive_requests", "contents": "keepalive_requests ${1:number};" },
    { "trigger": "keepalive_timeout", "contents": "keepalive_timeout ${1:timeout};" },
    { "trigger": "large_client_header_buffers", "contents": "large_client_header_buffers ${1:number} ${2:size};" },
    { "trigger": "limit_except", "contents": "limit_except ${1:method};" },
    { "trigger": "limit_rate", "contents": "limit_rate ${1:rate};" },
    { "trigger": "limit_rate_after", "contents": "limit_rate_after ${1:size};" },
    { "trigger": "lingering_close", "contents": "lingering_close ${1:off | on | always};" },
    { "trigger": "lingering_time", "contents": "lingering_time ${1:time};" },
    { "trigger": "lingering_timeout", "contents": "lingering_timeout ${1:time};" },
    { "trigger": "listen", "contents": "listen ${1:address[:port]};" },
    { "trigger": "log_not_found", "contents": "log_not_found ${1:on | off};" },
    { "trigger": "log_subrequest", "contents": "log_subrequest ${1:on | off};" },
    { "trigger": "max_ranges", "contents": "max_ranges ${1:number};" },
    { "trigger": "merge_slashes", "contents": "merge_slashes ${1:on | off};" },
    { "trigger": "msie_padding", "contents": "msie_padding ${1:on | off};" },
    { "trigger": "msie_refresh", "contents": "msie_refresh ${1:on | off};" },
    { "trigger": "open_file_cache", "contents": "open_file_cache ${1:off};" },
    { "trigger": "open_file_cache_errors", "contents": "open_file_cache_errors ${1:on | off};" },
    { "trigger": "open_file_cache_min_uses", "contents": "open_file_cache_min_uses ${1:number};" },
    { "trigger": "open_file_cache_valid", "contents": "open_file_cache_valid ${1:time};" },
    { "trigger": "optimize_server_names", "contents": "optimize_server_names ${1:on | off};" },
    { "trigger": "output_buffers", "contents": "output_buffers ${1:number} ${2:size};" },
    { "trigger": "port_in_redirect", "contents": "port_in_redirect ${1:on | off};" },
    { "trigger": "postpone_output", "contents": "postpone_output ${1:size};" },
    { "trigger": "read_ahead", "contents": "read_ahead ${1:size};" },
    { "trigger": "recursive_error_pages", "contents": "recursive_error_pages ${1:on | off};" },
    { "trigger": "request_pool_size", "contents": "request_pool_size ${1:size};" },
    { "trigger": "reset_timedout_connection", "contents": "reset_timedout_connection ${1:on | off};" },
    { "trigger": "resolver", "contents": "resolver ${1:address};" },
    { "trigger": "resolver_timeout", "contents": "resolver_timeout ${1:time};" },
    { "trigger": "root", "contents": "root ${1:path};" },
    { "trigger": "satisfy", "contents": "satisfy ${1:all | any};" },
    { "trigger": "satisfy_any", "contents": "satisfy_any ${1:on | off};" },
    { "trigger": "send_lowat", "contents": "send_lowat ${1:size};" },
    { "trigger": "send_timeout", "contents": "send_timeout ${1:time};" },
    { "trigger": "sendfile", "contents": "sendfile ${1:on | off};" },
    { "trigger": "sendfile_max_chunk", "contents": "sendfile_max_chunk ${1:size};" },
    { "trigger": "server_name", "contents": "server_name ${1:name};" },
    { "trigger": "server_name_in_redirect", "contents": "server_name_in_redirect ${1:on | off};" },
    { "trigger": "server_names_hash_bucket_size", "contents": "server_names_hash_bucket_size ${1:size};" },
    { "trigger": "server_names_hash_max_size", "contents": "server_names_hash_max_size ${1:size};" },
    { "trigger": "server_tokens", "contents": "server_tokens ${1:on | off};" },
    { "trigger": "tcp_nodelay", "contents": "tcp_nodelay ${1:on | off};" },
    { "trigger": "tcp_nopush", "contents": "tcp_nopush ${1:on | off};" },
    { "trigger": "try_files", "contents": "try_files ${1:file ... uri};" },
    { "trigger": "types_hash_bucket_size", "contents": "types_hash_bucket_size ${1:size};" },
    { "trigger": "types_hash_max_size", "contents": "types_hash_max_size ${1:size};" },
    { "trigger": "underscores_in_headers", "contents": "underscores_in_headers ${1:on | off};" },
    { "trigger": "variables_hash_bucket_size", "contents": "variables_hash_bucket_size ${1:size};" },
    { "trigger": "variables_hash_max_size", "contents": "variables_hash_max_size ${1:size};" }
  ]
}
